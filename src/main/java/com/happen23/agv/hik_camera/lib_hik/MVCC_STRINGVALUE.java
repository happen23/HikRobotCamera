package com.happen23.agv.hik_camera.lib_hik;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;

import java.util.Arrays;
import java.util.List;

/**
 * <i>native declaration : include\CameraParams.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class MVCC_STRINGVALUE extends Structure {
	/**
	 * ch:\u5f53\u524d\u503c | en:Current Value<br>
	 * C type : char[256]
	 */
	public byte[] chCurValue = new byte[256];
	public long nMaxLength;
	/** C type : unsigned int[2] */
	public int[] nReserved = new int[2];
	public MVCC_STRINGVALUE() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("chCurValue", "nMaxLength", "nReserved");
	}
	/**
	 * @param chCurValue ch:\u5f53\u524d\u503c | en:Current Value<br>
	 * C type : char[256]<br>
	 * @param nReserved C type : unsigned int[2]
	 */
	public MVCC_STRINGVALUE(byte chCurValue[], long nMaxLength, int nReserved[]) {
		super();
		if ((chCurValue.length != this.chCurValue.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.chCurValue = chCurValue;
		this.nMaxLength = nMaxLength;
		if ((nReserved.length != this.nReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.nReserved = nReserved;
	}
	public MVCC_STRINGVALUE(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends MVCC_STRINGVALUE implements Structure.ByReference {
		
	};
	public static class ByValue extends MVCC_STRINGVALUE implements Structure.ByValue {
		
	};
}
