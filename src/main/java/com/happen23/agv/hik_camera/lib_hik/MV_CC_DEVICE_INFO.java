package com.happen23.agv.hik_camera.lib_hik;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Union;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\CameraParams.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
@Structure.FieldOrder({"nMajorVer", "nMinorVer", "nMacAddrHigh", "nMacAddrLow", "nTLayerType", "nReserved", "SpecialInfo"})
public class MV_CC_DEVICE_INFO extends Structure {
	public short nMajorVer;
	public short nMinorVer;
	/** ch:MAC \u5730\u5740 | en:MAC Address */
	public int nMacAddrHigh;
	public int nMacAddrLow;
	/** ch:\u8bbe\u5907\u4f20\u8f93\u5c42\u534f\u8bae\u7c7b\u578b\uff0ce.g. MV_GIGE_DEVICE | en:Device Transport Layer Protocol Type, e.g. MV_GIGE_DEVICE */
	public int nTLayerType;
	/** C type : unsigned int[4] */
	public int[] nReserved = new int[4];
	/** C type : SpecialInfo_union */
	public SpecialInfo_union SpecialInfo;
	/** <i>native declaration : include\CameraParams.h:83</i> */
	public static class SpecialInfo_union extends Union {
		/** C type : MV_GIGE_DEVICE_INFO */
		public MV_GIGE_DEVICE_INFO stGigEInfo;
		/** C type : MV_USB3_DEVICE_INFO */
		public MV_USB3_DEVICE_INFO stUsb3VInfo;
		/** C type : MV_CamL_DEV_INFO */
		public MV_CamL_DEV_INFO stCamLInfo;
		public SpecialInfo_union() {
			super();
		}
		/** @param stGigEInfo C type : MV_GIGE_DEVICE_INFO */
		public SpecialInfo_union(MV_GIGE_DEVICE_INFO stGigEInfo) {
			super();
			this.stGigEInfo = stGigEInfo;
			setType(MV_GIGE_DEVICE_INFO.class);
		}
		/** @param stUsb3VInfo C type : MV_USB3_DEVICE_INFO */
		public SpecialInfo_union(MV_USB3_DEVICE_INFO stUsb3VInfo) {
			super();
			this.stUsb3VInfo = stUsb3VInfo;
			setType(MV_USB3_DEVICE_INFO.class);
		}
		/** @param stCamLInfo C type : MV_CamL_DEV_INFO */
		public SpecialInfo_union(MV_CamL_DEV_INFO stCamLInfo) {
			super();
			this.stCamLInfo = stCamLInfo;
			setType(MV_CamL_DEV_INFO.class);
		}
		public SpecialInfo_union(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends SpecialInfo_union implements Structure.ByReference {
			
		};
		public static class ByValue extends SpecialInfo_union implements Structure.ByValue {
			
		};
	};
	public MV_CC_DEVICE_INFO() {
		super();
	}
	/**
	 * @param nMacAddrHigh ch:MAC \u5730\u5740 | en:MAC Address<br>
	 * @param nTLayerType ch:\u8bbe\u5907\u4f20\u8f93\u5c42\u534f\u8bae\u7c7b\u578b\uff0ce.g. MV_GIGE_DEVICE | en:Device Transport Layer Protocol Type, e.g. MV_GIGE_DEVICE<br>
	 * @param nReserved C type : unsigned int[4]<br>
	 * @param SpecialInfo C type : SpecialInfo_union
	 */
	public MV_CC_DEVICE_INFO(short nMajorVer, short nMinorVer, int nMacAddrHigh, int nMacAddrLow, int nTLayerType, int nReserved[], SpecialInfo_union SpecialInfo) {
		super();
		this.nMajorVer = nMajorVer;
		this.nMinorVer = nMinorVer;
		this.nMacAddrHigh = nMacAddrHigh;
		this.nMacAddrLow = nMacAddrLow;
		this.nTLayerType = nTLayerType;
		if ((nReserved.length != this.nReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.nReserved = nReserved;
		this.SpecialInfo = SpecialInfo;
	}
	public MV_CC_DEVICE_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends MV_CC_DEVICE_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends MV_CC_DEVICE_INFO implements Structure.ByValue {
		
	};
}
