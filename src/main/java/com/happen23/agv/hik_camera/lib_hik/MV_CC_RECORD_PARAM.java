package com.happen23.agv.hik_camera.lib_hik;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\CameraParams.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
@Structure.FieldOrder({"enPixelType", "nWidth", "nHeight", "fFrameRate", "nBitRate", "enRecordFmtType", "strFilePath", "nRes"})
public class MV_CC_RECORD_PARAM extends Structure {
	/**
	 * @see MvGvspPixelType<br>
	 * [IN]     \u8f93\u5165\u6570\u636e\u7684\u50cf\u7d20\u683c\u5f0f<br>
	 * C type : MvGvspPixelType
	 */
	public int enPixelType;
	/** [IN]     \u56fe\u50cf\u5bbd(\u6307\u5b9a\u76ee\u6807\u53c2\u6570\u65f6\u9700\u4e3a2\u7684\u500d\u6570) */
	public short nWidth;
	/** [IN]     \u56fe\u50cf\u9ad8(\u6307\u5b9a\u76ee\u6807\u53c2\u6570\u65f6\u9700\u4e3a2\u7684\u500d\u6570) */
	public short nHeight;
	/** [IN]     \u5e27\u7387fps(1/16-120) */
	public float fFrameRate;
	/** [IN]     \u7801\u7387kbps(128kbps-16Mbps) */
	public int nBitRate;
	/**
	 * @see MV_RECORD_FORMAT_TYPE<br>
	 * [IN]     \u5f55\u50cf\u683c\u5f0f<br>
	 * C type : MV_RECORD_FORMAT_TYPE
	 */
	public int enRecordFmtType;
	/**
	 * [IN]     \u5f55\u50cf\u6587\u4ef6\u5b58\u653e\u8def\u5f84(\u5982\u679c\u8def\u5f84\u4e2d\u5b58\u5728\u4e2d\u6587\uff0c\u9700\u8f6c\u6210utf-8)<br>
	 * C type : char*
	 */
	public Pointer strFilePath;
	/** C type : unsigned int[8] */
	public int[] nRes = new int[8];
	public MV_CC_RECORD_PARAM() {
		super();
	}
	/**
	 * @param enPixelType @see MvGvspPixelType<br>
	 * [IN]     \u8f93\u5165\u6570\u636e\u7684\u50cf\u7d20\u683c\u5f0f<br>
	 * C type : MvGvspPixelType<br>
	 * @param nWidth [IN]     \u56fe\u50cf\u5bbd(\u6307\u5b9a\u76ee\u6807\u53c2\u6570\u65f6\u9700\u4e3a2\u7684\u500d\u6570)<br>
	 * @param nHeight [IN]     \u56fe\u50cf\u9ad8(\u6307\u5b9a\u76ee\u6807\u53c2\u6570\u65f6\u9700\u4e3a2\u7684\u500d\u6570)<br>
	 * @param fFrameRate [IN]     \u5e27\u7387fps(1/16-120)<br>
	 * @param nBitRate [IN]     \u7801\u7387kbps(128kbps-16Mbps)<br>
	 * @param enRecordFmtType @see MV_RECORD_FORMAT_TYPE<br>
	 * [IN]     \u5f55\u50cf\u683c\u5f0f<br>
	 * C type : MV_RECORD_FORMAT_TYPE<br>
	 * @param strFilePath [IN]     \u5f55\u50cf\u6587\u4ef6\u5b58\u653e\u8def\u5f84(\u5982\u679c\u8def\u5f84\u4e2d\u5b58\u5728\u4e2d\u6587\uff0c\u9700\u8f6c\u6210utf-8)<br>
	 * C type : char*<br>
	 * @param nRes C type : unsigned int[8]
	 */
	public MV_CC_RECORD_PARAM(int enPixelType, short nWidth, short nHeight, float fFrameRate, int nBitRate, int enRecordFmtType, Pointer strFilePath, int nRes[]) {
		super();
		this.enPixelType = enPixelType;
		this.nWidth = nWidth;
		this.nHeight = nHeight;
		this.fFrameRate = fFrameRate;
		this.nBitRate = nBitRate;
		this.enRecordFmtType = enRecordFmtType;
		this.strFilePath = strFilePath;
		if ((nRes.length != this.nRes.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.nRes = nRes;
	}
	public MV_CC_RECORD_PARAM(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends MV_CC_RECORD_PARAM implements Structure.ByReference {
		
	};
	public static class ByValue extends MV_CC_RECORD_PARAM implements Structure.ByValue {
		
	};
}
