package com.happen23.agv.hik_camera.lib_hik;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : include\CameraParams.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
@Structure.FieldOrder({"hWnd", "pData", "nDataLen", "nWidth", "nHeight", "enPixelType", "nRes"})
public class MV_DISPLAY_FRAME_INFO extends Structure {
	/**
	 * ch:\u7a97\u53e3\u53e5\u67c4 | en:HWND<br>
	 * C type : void*
	 */
	public Pointer hWnd;
	/**
	 * ch:\u663e\u793a\u7684\u6570\u636e | en:Data Buffer<br>
	 * C type : unsigned char*
	 */
	public Pointer pData;
	/** ch:\u6570\u636e\u957f\u5ea6 | en:Data Size */
	public int nDataLen;
	/** ch:\u56fe\u50cf\u5bbd | en:Width */
	public short nWidth;
	/** ch:\u56fe\u50cf\u9ad8 | en:Height */
	public short nHeight;
	/**
	 * @see MvGvspPixelType<br>
	 * ch:\u50cf\u7d20\u683c\u5f0f | en:Pixel format<br>
	 * C type : MvGvspPixelType
	 */
	public int enPixelType;
	/** C type : unsigned int[4] */
	public int[] nRes = new int[4];
	public MV_DISPLAY_FRAME_INFO() {
		super();
	}
	/**
	 * @param hWnd ch:\u7a97\u53e3\u53e5\u67c4 | en:HWND<br>
	 * C type : void*<br>
	 * @param pData ch:\u663e\u793a\u7684\u6570\u636e | en:Data Buffer<br>
	 * C type : unsigned char*<br>
	 * @param nDataLen ch:\u6570\u636e\u957f\u5ea6 | en:Data Size<br>
	 * @param nWidth ch:\u56fe\u50cf\u5bbd | en:Width<br>
	 * @param nHeight ch:\u56fe\u50cf\u9ad8 | en:Height<br>
	 * @param enPixelType @see MvGvspPixelType<br>
	 * ch:\u50cf\u7d20\u683c\u5f0f | en:Pixel format<br>
	 * C type : MvGvspPixelType<br>
	 * @param nRes C type : unsigned int[4]
	 */
	public MV_DISPLAY_FRAME_INFO(Pointer hWnd, Pointer pData, int nDataLen, short nWidth, short nHeight, int enPixelType, int nRes[]) {
		super();
		this.hWnd = hWnd;
		this.pData = pData;
		this.nDataLen = nDataLen;
		this.nWidth = nWidth;
		this.nHeight = nHeight;
		this.enPixelType = enPixelType;
		if ((nRes.length != this.nRes.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.nRes = nRes;
	}
	public MV_DISPLAY_FRAME_INFO(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends MV_DISPLAY_FRAME_INFO implements Structure.ByReference {
		
	};
	public static class ByValue extends MV_DISPLAY_FRAME_INFO implements Structure.ByValue {
		
	};
}
