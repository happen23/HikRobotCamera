package com.happen23.agv.hik_camera.lib_hik;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.Union;

/**
 * <i>native declaration : include\CameraParams.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
@Structure.FieldOrder({"nWidth", "nHeight", "enPixelType", "nFrameNum", "nDevTimeStampHigh", "nDevTimeStampLow", "nReserved0", "nHostTimeStamp", "nFrameLen", "nSecondCount", "nCycleCount", "nCycleOffset", "fGain", "fExposureTime", "nAverageBrightness", "nRed", "nGreen", "nBlue", "nFrameCounter", "nTriggerIndex", "nInput", "nOutput", "nOffsetX", "nOffsetY", "nChunkWidth", "nChunkHeight", "nLostPacket", "nUnparsedChunkNum", "UnparsedChunkList", "nReserved"})
public class MV_FRAME_OUT_INFO_EX extends Structure {
	/** ch:\u56fe\u50cf\u5bbd | en:Image Width */
	public short nWidth;
	/** ch:\u56fe\u50cf\u9ad8 | en:Image Height */
	public short nHeight;
	/**
	 * @see MvGvspPixelType<br>
	 * ch:\u50cf\u7d20\u683c\u5f0f | en:Pixel Type<br>
	 * C type : MvGvspPixelType
	 */
	public MvGvspPixelType enPixelType;
	/** ch:\u5e27\u53f7 | en:Frame Number */
	public int nFrameNum;
	/** ch:\u65f6\u95f4\u6233\u9ad832\u4f4d | en:Timestamp high 32 bits */
	public int nDevTimeStampHigh;
	/** ch:\u65f6\u95f4\u6233\u4f4e32\u4f4d | en:Timestamp low 32 bits */
	public int nDevTimeStampLow;
	/** ch:\u4fdd\u7559\uff0c8\u5b57\u8282\u5bf9\u9f50 | en:Reserved, 8-byte aligned */
	public int nReserved0;
	/** ch:\u4e3b\u673a\u751f\u6210\u7684\u65f6\u95f4\u6233 | en:Host-generated timestamp */
	public long nHostTimeStamp;
	public int nFrameLen;
	public int nSecondCount;
	public int nCycleCount;
	public int nCycleOffset;
	public float fGain;
	public float fExposureTime;
	/** ch:\u5e73\u5747\u4eae\u5ea6 | en:Average brightness */
	public int nAverageBrightness;
	public int nRed;
	public int nGreen;
	public int nBlue;
	public int nFrameCounter;
	/** ch:\u89e6\u53d1\u8ba1\u6570 | en:Trigger Counting */
	public int nTriggerIndex;
	/** ch:\u8f93\u5165 | en:Input */
	public int nInput;
	/** ch:\u8f93\u51fa | en:Output */
	public int nOutput;
	public short nOffsetX;
	public short nOffsetY;
	public short nChunkWidth;
	public short nChunkHeight;
	/** ch:\u672c\u5e27\u4e22\u5305\u6570 | en:Lost Pacekt Number In This Frame */
	public int nLostPacket;
	public int nUnparsedChunkNum;
	/** C type : UnparsedChunkList_union */
	public UnparsedChunkList_union UnparsedChunkList;
	/**
	 * \u4fdd\u7559<br>
	 * C type : unsigned int[36]
	 */
	public int[] nReserved = new int[36];
	/** <i>native declaration : include\CameraParams.h:195</i> */
	public static class UnparsedChunkList_union extends Union {
		/** C type : MV_CHUNK_DATA_CONTENT* */
		public MV_CHUNK_DATA_CONTENT.ByReference pUnparsedChunkContent;
		public long nRet;
		public UnparsedChunkList_union() {
			super();
		}
		/** @param pUnparsedChunkContent C type : MV_CHUNK_DATA_CONTENT* */
		public UnparsedChunkList_union(MV_CHUNK_DATA_CONTENT.ByReference pUnparsedChunkContent) {
			super();
			this.pUnparsedChunkContent = pUnparsedChunkContent;
			setType(MV_CHUNK_DATA_CONTENT.ByReference.class);
		}
		public UnparsedChunkList_union(long nRet) {
			super();
			this.nRet = nRet;
			setType(Long.TYPE);
		}
		public UnparsedChunkList_union(Pointer peer) {
			super(peer);
		}
		public static class ByReference extends UnparsedChunkList_union implements Structure.ByReference {
			
		};
		public static class ByValue extends UnparsedChunkList_union implements Structure.ByValue {
			
		};
	};
	public MV_FRAME_OUT_INFO_EX() {
		super();
	}
	public MV_FRAME_OUT_INFO_EX(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends MV_FRAME_OUT_INFO_EX implements Structure.ByReference {
		
	};
	public static class ByValue extends MV_FRAME_OUT_INFO_EX implements Structure.ByValue {
		
	};
}
