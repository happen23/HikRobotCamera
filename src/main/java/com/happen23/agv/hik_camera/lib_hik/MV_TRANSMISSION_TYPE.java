package com.happen23.agv.hik_camera.lib_hik;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * <i>native declaration : include\CameraParams.h</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
@Structure.FieldOrder({"enTransmissionType", "nDestIp", "nDestPort", "nReserved"})
public class MV_TRANSMISSION_TYPE extends Structure {
	/**
	 * @see MV_GIGE_TRANSMISSION_TYPE<br>
	 * \u4f20\u8f93\u6a21\u5f0f | en:Transmission type<br>
	 * C type : MV_GIGE_TRANSMISSION_TYPE
	 */
	public int enTransmissionType;
	/** \u76ee\u6807IP\uff0c\u7ec4\u64ad\u6a21\u5f0f\u4e0b\u6709\u610f\u4e49 | en:Destination IP */
	public int nDestIp;
	/** \u76ee\u6807Port\uff0c\u7ec4\u64ad\u6a21\u5f0f\u4e0b\u6709\u610f\u4e49 | en:Destination port */
	public short nDestPort;
	/**
	 * \u9884\u7559 | en:Reserved<br>
	 * C type : unsigned int[32]
	 */
	public int[] nReserved = new int[32];
	public MV_TRANSMISSION_TYPE() {
		super();
	}
	/**
	 * @param enTransmissionType @see MV_GIGE_TRANSMISSION_TYPE<br>
	 * \u4f20\u8f93\u6a21\u5f0f | en:Transmission type<br>
	 * C type : MV_GIGE_TRANSMISSION_TYPE<br>
	 * @param nDestIp \u76ee\u6807IP\uff0c\u7ec4\u64ad\u6a21\u5f0f\u4e0b\u6709\u610f\u4e49 | en:Destination IP<br>
	 * @param nDestPort \u76ee\u6807Port\uff0c\u7ec4\u64ad\u6a21\u5f0f\u4e0b\u6709\u610f\u4e49 | en:Destination port<br>
	 * @param nReserved \u9884\u7559 | en:Reserved<br>
	 * C type : unsigned int[32]
	 */
	public MV_TRANSMISSION_TYPE(int enTransmissionType, int nDestIp, short nDestPort, int nReserved[]) {
		super();
		this.enTransmissionType = enTransmissionType;
		this.nDestIp = nDestIp;
		this.nDestPort = nDestPort;
		if ((nReserved.length != this.nReserved.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.nReserved = nReserved;
	}
	public MV_TRANSMISSION_TYPE(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends MV_TRANSMISSION_TYPE implements Structure.ByReference {
		
	};
	public static class ByValue extends MV_TRANSMISSION_TYPE implements Structure.ByValue {
		
	};
}
